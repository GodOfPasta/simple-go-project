services:
  app:
    build: ./service
    expose:
      - "8080"
    environment:
      DB_WRITE_URI: postgres://db_write:write_pass@db:5432/postgres?sslmode=disable
      DB_READ_URI: postgres://db_read:read_pass@db:5432/postgres?sslmode=disable
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
    networks:
      - backend

  db:
    build: ./db
    restart: always
    environment:
      PGUSER: postgres 
      POSTGRES_PASSWORD: admin
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
    ports:
      - 5432:5432
 
volumes:
  pgdata:

networks:
  backend:
    driver: bridge